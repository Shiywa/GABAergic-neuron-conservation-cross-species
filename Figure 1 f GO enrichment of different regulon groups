regulon <- read.csv("/Users/wangshiyou/Documents/work/BGI/program/毕业吧/公共数据挖掘文章设计/result/pySCENIC/regulons.csv")
regulon <-regulon[,c(1,9)]
regulon <- regulon[-c(1,2),]
colnames(regulon) <- c("TF","Targets")
all.GO <- NA
for (i in unique(regulon$TF)) {
  d <- regulon[which(regulon$TF == i),]
  g.all <- c()
  for (j in 1:dim(d)[1]) {
    tar <- d[j,2]
    g <- strsplit(tar,",")[[1]][grep("\\(",strsplit(tar,",")[[1]])]
    g2 <- apply(as.data.frame(g),1,function(x) strsplit(x,"'")[[1]][2])
    g.all <- c(g.all,g2)
  }
  g.all <- c(i,g.all)
  g.all <- unique(g.all)
  if(length(g.all) > 50){
    enri <- Metascape_test2(g.all, id = i)
    all.GO <- rbind(all.GO,enri)
  }
}
all.GO <- all.GO[-1,]
unique(all.GO$group)
all.GO <- all.GO[which(all.GO$Count > 5),]
unique(all.GO$group)

###
p <- Heatmap(auc.mtx2,col = colorRamp2(c(0,0.5,1), c("white", "grey", "black")),show_column_names = F,#cluster_columns = F,#column_names_side = "top",
             top_annotation = anno2,row_names_gp = gpar(fontsize = 7),name = "percentage",row_km = 8)
GO1 <- all.GO[which(all.GO$group %in% group1),]
unique(GO1$group)
###
group5 <- c("SIN3A","TCF7L2","CREM","NFYA","UBP1","PRDM1","BCL11A","RFX7","RFX3","TCF12","MEF2C","FOXJ3","REST")
group3 <- c("NPDC1","ZNF23","MAZ","ZNF831","TBPL1","MAF","SP3","KLF15","PGR","TRIM28","E2F4","KLF13","KLF1","SP1","IRF2","ZIC1")
group2 <- c("E2F7","RORB","TGIF2","STAT1","E2F3","TEAD2","AIRE","FLI1","SPI1","ELK4","KLF2","IRF7","CTCF","HMGB2","LEF1","WT1","TFAP2C","SMARCC1","IRF5","ZBTB18","ETV3","NR2F6","HSF1","REL","NUP133","CREBL2","RXRB","SOX13")
group4 <- c("HIVEP1","MXD4","ELF2","STAT6","TFCP2L1","NFKB1","RUNX1","ERG","RXRA","NFIB")
group8 <- c("ESRRG","ZEB1","CUX1","NRF1","MLXIPL","PPARG","ARID3A","NR2F1")
group6 <- c("HDAC2","BRF2","ETS2","ZBTB14","KLF8","USF1","MAFG","RARG","CCDC25","DDIT3","E2F1","ESRRB","ELF1","RELA","NEUROD2","METTL14","LHX2")
group7 <- c("CEBPB","YY1","ZNF281","GBX1","ZNF35","ZBTB7B","PPARA","RELB","HDX","GATA2","E2F2","NFE2L2","ELK3","ONECUT1","STAT5A","LMX1B")

g.list <- list()

n <- paste("group",2:8,sep = "")
for (i in n) {
  g.list[[i]] <- eval(parse(text = i))
}
GO.allGroup <- NA
for (x in names(g.list)) {
  g.group5 <- c()
  for (i in g.list[[x]]) {
    d <- regulon[which(regulon$TF == i),]
    g.all <- c()
    for (j in 1:dim(d)[1]) {
      tar <- d[j,2]
      g <- strsplit(tar,",")[[1]][grep("\\(",strsplit(tar,",")[[1]])]
      g2 <- apply(as.data.frame(g),1,function(x) strsplit(x,"'")[[1]][2])
      g.all <- c(g.all,g2)
    }
    g.all <- c(i,g.all)
    g.all <- unique(g.all)
    g.group5 <- c(g.group5,g.all)
  }
  g.group5 <- unique(g.group5)
  allenrich <- Metascape_test2(g.group5,id = x)
  GO.allGroup <- rbind(GO.allGroup,allenrich)
}
GO.allGroup <- GO.allGroup[-1,]

d.plot <- GO.allGroup
d.plot <- d.plot[grep("GO:",d.plot$ID),]
d.plot <- d.plot[order(d.plot$p.adjust,decreasing = F),]
d.plot <- d.plot[,c("Description","p.adjust","group")]
des <- d.plot %>% group_by(group) %>% top_n(5,-p.adjust)
d.plot <- d.plot[which(d.plot$Description %in% unique(des$Description)),]
d.plot$p.adjust <- -log10(d.plot$p.adjust)

nrow <- as.character(c(1:length(unique(d.plot$group))))
names(nrow) <- unique(d.plot$group)
ncol <- as.character(c(1:length(unique(d.plot$Description))))
names(ncol) <- unique(d.plot$Description)
d.plot$Description <- as.numeric(ncol[d.plot$Description])
d.plot$group <- as.numeric(nrow[d.plot$group])
## log2()处理得到缩放后的值
d.plot$p.adjust <- log2(d.plot$p.adjust)

library(Matrix)
simple_triplet_matrix_sparse <-  sparseMatrix(i=d.plot$group, j=d.plot$Description, x=d.plot$p.adjust,
                                              dims=c(length(unique(d.plot$group)), length(unique(d.plot$Description))))
data.mtr <- as.data.frame(as.matrix(simple_triplet_matrix_sparse))
rownames(data.mtr) <- names(nrow) 
colnames(data.mtr) <- names(ncol) 
data.mtr <- data.mtr[,order(data.mtr["group2",],data.mtr["group3",],data.mtr["group4",],data.mtr["group5",],data.mtr["group6",],data.mtr["group7",],data.mtr["group8",],decreasing = F)]
data.mtr <- data.mtr[c("group2","group3","group4","group5","group6","group7","group8"),]
data.mtr <- rbind(rep(5,dim(data.mtr)[2]) , rep(0,dim(data.mtr)[2]) , data.mtr)

colors_border=c(rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9), rgb(0.2,0.7,0.1,0.9),
                rgb(0.2,0.5,0.1,0.9), rgb(0.8,0.2,0.1,0.9) , rgb(0.7,0.5,0.5,0.9))
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) , rgb(0.2,0.7,0.1,0.4),
             rgb(0.2,0.5,0.1,0.4), rgb(0.8,0.2,0.1,0.4) , rgb(0.7,0.5,0.5,0.4))

pdf("regulon Group top5 significant GO term.pdf",height = 8,width = 12)
radarchart( data.mtr  , axistype=1 , title = "group",
            #custom polygon
            pcol=colors_border , pfcol=colors_in , plwd=2 , plty=1,seg = 5,
            #custom the grid
            cglcol="grey", cglty=1, axislabcol="grey", caxislabels= c(0,2,4,8,16,32), cglwd=0.8,
            #custom labels
            vlcex=0.8
)
legend(x=1.8, y=1, legend = rownames(data.mtr[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
dev.off()
